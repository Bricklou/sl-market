{"version":3,"sources":["assets/img/icon.svg","components/NavBar/NavBar.tsx","components/base/Button/Button.tsx","components/form/Input/Input.tsx","utils/api.ts","utils/auth.ts","components/form/ErrorHandler/ErrorHandler.tsx","components/form/Checkbox/Checkbox.tsx","views/auth/Login/Login.tsx","views/home/Home.tsx","views/base/not_found/NotFound.tsx","components/Loading/Loading.tsx","views/base/loading_view/LoadingView.tsx","views/auth/Register/Register.tsx","routes/index.tsx","App.tsx","reportWebVitals.ts","store/constants/user.constants.ts","store/reducers/authentication.reducer.ts","store/reducers/index.ts","store/reducers/registration.reducer.ts","store/index.ts","index.tsx"],"names":["NavBar","id","className","to","src","logo","alt","activeClassName","Component","Button","this","props","icon","loading","type","disabled","showLoading","showIcon","children","Input","name","placeholder","onChange","api","axios","create","baseURL","email","password","remember","a","post","delete","user","put","get","ErrorHandler","errors","map","item","index","showErrors","Checkbox","htmlFor","label","Login","state","error","onSubmit","submitForm","bind","event","target","HTMLInputElement","setState","value","checked","preventDefault","auth","login","response","r","status","data","e","field","push","message","Home","NotFound","Loading","LoadingView","Register","username","password_confirmation","btnDisabled","updateButton","length","register","history","withRouter","requireGuest","from","next","meta","redirect","AppRouter","exact","path","component","guards","App","Main","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","userConstants","initialState","rootReducer","combineReducers","authentication","action","constants","isLoggedIn","registration","registering","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.440dca3c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon.e7f43e91.svg\";","import React, { Component } from 'react'\nimport './navbar.scss'\nimport logo from '../../assets/img/icon.svg'\nimport { Link, NavLink } from 'react-router-dom'\n\nexport default class NavBar extends Component {\n  render(): JSX.Element {\n    return (\n      <nav id=\"navbar\">\n        <div className=\"nav-container\">\n          <Link to=\"/\" className=\"logo-link\">\n            <span className=\"logo-container\">\n              <img src={logo} alt=\"Logo\" />\n            </span>\n            <span className=\"title-container\">SL-Market</span>\n          </Link>\n\n          <span className=\"menubar\">\n            <NavLink to=\"/vendeurs\" activeClassName=\"active\">\n              vendeurs\n            </NavLink>\n            <NavLink to=\"/connexion\" activeClassName=\"active\">\n              Connexion\n            </NavLink>\n            <NavLink to=\"/inscription\" activeClassName=\"active\">\n              Inscription\n            </NavLink>\n          </span>\n        </div>\n      </nav>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport './button.scss'\n\ntype ButtonProps = {\n  className?: string\n  icon?: string\n  type?: 'button' | 'submit' | 'reset'\n  loading?: boolean\n  disabled?: boolean\n}\n\nclass Button extends Component<ButtonProps> {\n  showIcon() {\n    if (this.props.icon) {\n      return <i className={`fas fa-${this.props.icon}`} />\n    }\n  }\n  showLoading() {\n    if (this.props.loading) {\n      return <i className=\"loading-icon fas fa-circle-notch\"></i>\n    }\n  }\n  render() {\n    return (\n      <button\n        className={`button ${this.props.className || ''}`}\n        type={this.props.type || 'button'}\n        disabled={this.props.loading || this.props.disabled}\n      >\n        {this.props.loading ? this.showLoading() : this.showIcon()}\n        {this.props.children}\n      </button>\n    )\n  }\n}\n\nexport default Button\n","import React, { ChangeEventHandler, Component } from 'react'\nimport './input.scss'\n\ntype InputProps = {\n  id: string\n  type: 'text' | 'password' | 'email'\n  name: string\n  placeholder: string\n  className?: string\n  icon?: string\n  onChange?: ChangeEventHandler\n  disabled?: boolean\n}\n\nclass Input extends Component<InputProps> {\n  showIcon(): JSX.Element | undefined {\n    if (this.props.icon) {\n      return (\n        <span className=\"icon\">\n          <i className={`fas fa-${this.props.icon}`} />\n        </span>\n      )\n    }\n  }\n  render() {\n    return (\n      <div\n        className={`input-field ${this.props.className || ''} ${\n          this.props.icon ? 'with-icon' : ''\n        }`}\n      >\n        {this.showIcon()}\n\n        <input\n          id={this.props.id}\n          type={this.props.type}\n          className=\"input\"\n          name={this.props.name}\n          placeholder={this.props.placeholder}\n          onChange={this.props.onChange}\n          disabled={this.props.disabled}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Input\n","import axios from 'axios'\n\nexport interface APIError {\n  rule: string\n  field: string\n  message: string\n}\n\nconst api = axios.create({\n  baseURL: '/api',\n})\n\nexport default api\n","import { AxiosResponse } from 'axios'\nimport api from './api'\n\nexport interface UserInfo {\n  username: string\n  email: string\n}\n\nexport interface UserRegister {\n  email: string\n  username: string\n  password: string\n  password_confirmation: string\n}\n\nclass Auth {\n  async login(\n    email: string,\n    password: string,\n    remember?: boolean\n  ): Promise<AxiosResponse<UserInfo>> {\n    return await api.post<UserInfo>('/auth', {\n      email,\n      password,\n      remember,\n    })\n  }\n\n  async logout() {\n    return await api.delete<null>('/auth')\n  }\n\n  async register(user: UserRegister) {\n    return await api.post<UserInfo>('/auth/register', user)\n  }\n\n  async refresh() {\n    return await api.put<UserInfo>('/auth')\n  }\n\n  async get() {\n    return await api.get<UserInfo>('/auth')\n  }\n}\n\nexport default new Auth()\n","import React, { Component } from 'react'\nimport './error-handler.scss'\n\ntype ErrorHandlerProps = {\n  errors: string[]\n}\n\nclass ErrorHandler extends Component<ErrorHandlerProps> {\n  showErrors() {\n    if (this.props.errors) {\n      return this.props.errors.map((item, index) => {\n        return (\n          <span className=\"error-msg\" key={index}>\n            {item}\n          </span>\n        )\n      })\n    }\n  }\n  render() {\n    return (\n      <div className={this.props.errors ? 'error' : ''}>\n        {this.props.children}\n        {this.showErrors()}\n      </div>\n    )\n  }\n}\n\nexport default ErrorHandler\n","import React, { ChangeEventHandler, Component } from 'react'\nimport './checkbox.scss'\n\ntype CheckboxProps = {\n  id: string\n  label: string\n  checked?: boolean\n  className?: string\n  onChange?: ChangeEventHandler\n  disabled?: boolean\n}\n\nclass Checkbox extends Component<CheckboxProps> {\n  render() {\n    return (\n      <div className={`checkbox-field ${this.props.className || ''}`}>\n        <input\n          id={this.props.id}\n          type=\"checkbox\"\n          className=\"checkbox\"\n          onChange={this.props.onChange}\n          disabled={this.props.disabled}\n        />\n        <label htmlFor={this.props.id} className=\"label\">\n          {this.props.label}\n        </label>\n      </div>\n    )\n  }\n}\n\nexport default Checkbox\n","import { AxiosError } from 'axios'\nimport React, { ChangeEvent, Component, FormEvent, ReactPropTypes } from 'react'\nimport Button from '../../../components/base/Button/Button'\nimport Input from '../../../components/form/Input/Input'\nimport auth from '../../../utils/auth'\nimport { APIError } from '../../../utils/api'\nimport './login.scss'\nimport ErrorHandler from '../../../components/form/ErrorHandler/ErrorHandler'\nimport Checkbox from '../../../components/form/Checkbox/Checkbox'\n\ntype LoginState = {\n  user: string\n  password: string\n  remember: boolean\n  loading: boolean\n  errors: {\n    [key: string]: string[]\n  }\n}\n\nexport default class Login extends Component<{}, LoginState> {\n  constructor(props: ReactPropTypes) {\n    super(props)\n    this.state = {\n      user: '',\n      password: '',\n      remember: false,\n      loading: false,\n      errors: {},\n    }\n  }\n\n  showError(error?: string[]) {\n    if (error) {\n      return error.map((item) => <span className=\"error\">{item}</span>)\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"login\">\n        <div className=\"box\">\n          <form className=\"form-container\" onSubmit={this.submitForm.bind(this)}>\n            <label className=\"label\" htmlFor=\"email\">\n              Adresse E-mail\n            </label>\n            <ErrorHandler errors={this.state.errors['email']}>\n              <Input\n                id=\"email\"\n                placeholder=\"Adresse E-mail\"\n                name=\"email\"\n                type=\"text\"\n                icon=\"envelope\"\n                onChange={(event: ChangeEvent) => {\n                  if (event.target instanceof HTMLInputElement) {\n                    this.setState({ user: event.target.value })\n                  }\n                }}\n                disabled={this.state.loading}\n              />\n            </ErrorHandler>\n\n            <label className=\"label\" htmlFor=\"password\">\n              Mot de passe\n            </label>\n            <ErrorHandler errors={this.state.errors['password']}>\n              <Input\n                id=\"password\"\n                placeholder=\"Mot de passe\"\n                name=\"password\"\n                type=\"password\"\n                icon=\"lock\"\n                onChange={(event: ChangeEvent) => {\n                  if (event.target instanceof HTMLInputElement) {\n                    this.setState({ password: event.target.value })\n                  }\n                }}\n                disabled={this.state.loading}\n              />\n            </ErrorHandler>\n\n            <Checkbox\n              id=\"remember\"\n              onChange={(event: ChangeEvent) => {\n                if (event.target instanceof HTMLInputElement) {\n                  this.setState({ remember: event.target.checked })\n                }\n              }}\n              disabled={this.state.loading}\n              label=\"Rester connecté ?\"\n              className=\"mx-8 mb-6\"\n            />\n\n            <Button icon=\"sign-in-alt\" type=\"submit\" loading={this.state.loading}>\n              Connexion\n            </Button>\n          </form>\n        </div>\n      </div>\n    )\n  }\n\n  async submitForm(event: FormEvent) {\n    event.preventDefault()\n    this.setState({ loading: true })\n    try {\n      await auth.login(this.state.user, this.state.password, true)\n    } catch (error) {\n      if (error.response) {\n        const r = (error as AxiosError).response\n        switch (r?.status) {\n          case 422:\n            let errors: { [key: string]: string[] } = {}\n            for (const e of r.data.errors as APIError[]) {\n              if (errors[e.field] == null) errors[e.field] = []\n\n              errors[e.field].push(e.message)\n            }\n            this.setState({ errors })\n            break\n          case 400:\n            this.setState({\n              errors: {\n                email: ['Identifiants invalides'],\n              },\n            })\n        }\n      }\n\n      this.setState({ loading: false })\n    }\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Home extends Component {\n  render() {\n    return <h1>Home</h1>\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class NotFound extends Component {\n  render() {\n    return <h1>Page not found</h1>\n  }\n}\n","import React, { Component } from 'react'\n\nclass Loading extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Loading</h1>\n      </div>\n    )\n  }\n}\n\nexport default Loading\n","import React, { Component } from 'react'\nimport Loading from '../../../components/Loading/Loading'\n\nclass LoadingView extends Component {\n  render() {\n    return (\n      <div>\n        <Loading />\n      </div>\n    )\n  }\n}\n\nexport default LoadingView\n","import { AxiosError } from 'axios'\nimport React, { ChangeEvent, Component, FormEvent } from 'react'\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\nimport Button from '../../../components/base/Button/Button'\nimport ErrorHandler from '../../../components/form/ErrorHandler/ErrorHandler'\nimport Input from '../../../components/form/Input/Input'\nimport { APIError } from '../../../utils/api'\nimport auth from '../../../utils/auth'\nimport './register.scss'\n\ninterface RegisterProps {}\n\ninterface RegisterState {\n  username: string\n  email: string\n  password: string\n  password_confirmation: string\n  loading: boolean\n  btnDisabled: boolean\n  errors: {\n    [key: string]: string[]\n  }\n}\n\nclass Register extends Component<RouteComponentProps<RegisterProps>, RegisterState> {\n  constructor(props: RouteComponentProps<RegisterProps>) {\n    super(props)\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      password_confirmation: '',\n      loading: false,\n      btnDisabled: true,\n      errors: {},\n    }\n  }\n\n  showError(error?: string[]) {\n    if (error) {\n      return error.map((item) => <span className=\"error\">{item}</span>)\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"register\">\n        <div className=\"box\">\n          <form className=\"form-container\" onSubmit={this.submitForm.bind(this)}>\n            <label htmlFor=\"username\" className=\"label\">\n              Nom d'utilisateur\n            </label>\n            <ErrorHandler errors={this.state.errors['username']}>\n              <Input\n                id=\"username\"\n                placeholder=\"Nom d'utilisateur\"\n                name=\"username\"\n                type=\"text\"\n                icon=\"user\"\n                onChange={(event: ChangeEvent<HTMLInputElement>) => {\n                  this.setState({ username: event.target.value }, this.updateButton)\n                }}\n                disabled={this.state.loading}\n              />\n            </ErrorHandler>\n\n            <label htmlFor=\"email\" className=\"label\">\n              Adresse E-Mail\n            </label>\n            <ErrorHandler errors={this.state.errors['email']}>\n              <Input\n                id=\"email\"\n                placeholder=\"Adresse E-Mail\"\n                name=\"email\"\n                type=\"email\"\n                icon=\"envelope\"\n                onChange={(event: ChangeEvent<HTMLInputElement>) => {\n                  this.setState({ email: event.target.value }, this.updateButton)\n                }}\n                disabled={this.state.loading}\n              />\n            </ErrorHandler>\n\n            <label className=\"label\" htmlFor=\"password\">\n              Mot de passe\n            </label>\n            <ErrorHandler errors={this.state.errors['password']}>\n              <Input\n                id=\"password\"\n                placeholder=\"Mot de passe\"\n                name=\"password\"\n                type=\"password\"\n                icon=\"lock\"\n                onChange={(event: ChangeEvent<HTMLInputElement>) => {\n                  this.setState({ password: event.target.value }, this.updateButton)\n                }}\n                disabled={this.state.loading}\n              />\n            </ErrorHandler>\n\n            <label className=\"label\" htmlFor=\"confirmation\">\n              Confirmation\n            </label>\n            <ErrorHandler errors={this.state.errors['password_confirmation']}>\n              <Input\n                id=\"confirmation\"\n                placeholder=\"Confirmation\"\n                name=\"confirmation\"\n                type=\"password\"\n                icon=\"lock\"\n                onChange={(event: ChangeEvent<HTMLInputElement>) => {\n                  this.setState({ password_confirmation: event.target.value }, this.updateButton)\n                }}\n                disabled={this.state.loading}\n              />\n            </ErrorHandler>\n\n            <Button\n              icon=\"sign-in-alt\"\n              type=\"submit\"\n              loading={this.state.loading}\n              disabled={this.state.btnDisabled}\n            >\n              Inscription\n            </Button>\n          </form>\n        </div>\n      </div>\n    )\n  }\n\n  updateButton() {\n    if (\n      this.state.username.length > 4 &&\n      this.state.email.length > 1 &&\n      this.state.password.length > 4 &&\n      this.state.password === this.state.password_confirmation\n    ) {\n      this.setState({ btnDisabled: false })\n    } else {\n      this.setState({ btnDisabled: true })\n    }\n  }\n\n  async submitForm(event: FormEvent) {\n    event.preventDefault()\n    this.setState({ loading: true })\n    try {\n      await auth.register({\n        username: this.state.username,\n        email: this.state.email,\n        password: this.state.password,\n        password_confirmation: this.state.password_confirmation,\n      })\n\n      this.props.history.push('/')\n    } catch (error) {\n      if (error.response) {\n        const r = (error as AxiosError).response\n        switch (r?.status) {\n          case 422:\n            let errors: { [key: string]: string[] } = {}\n            for (const e of r.data.errors as APIError[]) {\n              if (errors[e.field] == null) errors[e.field] = []\n\n              errors[e.field].push(e.message)\n            }\n            this.setState({ errors })\n            break\n          default:\n            this.setState({\n              errors: {\n                username: [\n                  'Une erreur imprévue est survenu, veuillez réessayer plus tard ou contactez le support.',\n                ],\n              },\n            })\n        }\n      }\n      this.setState({ loading: false })\n    }\n  }\n}\n\nexport default withRouter(Register)\n","import React from 'react'\nimport { Route, RouterProps, Switch } from 'react-router-dom'\nimport { GuardProvider, GuardedRoute, GuardFunction } from 'react-router-guards'\nimport Login from '../views/auth/Login/Login'\nimport Home from '../views/home/Home'\nimport NotFound from '../views/base/not_found/NotFound'\n\nimport LoadingView from '../views/base/loading_view/LoadingView'\nimport Register from '../views/auth/Register/Register'\n\nconst requireGuest: GuardFunction = (to, from, next) => {\n  if (!to.meta.auth) {\n    next()\n  } else {\n    next.redirect('/')\n  }\n}\n\nconst AppRouter = (props: RouterProps) => (\n  <Switch>\n    {/* Base routes */}\n    <Route exact path=\"/\" component={Home} />\n\n    {/* Auth routes */}\n    <GuardProvider guards={[requireGuest]} loading={LoadingView}>\n      <Switch>\n        <GuardedRoute exact path=\"/connexion\" component={Login} />\n        <GuardedRoute exact path=\"/inscription\" component={Register} />\n      </Switch>\n    </GuardProvider>\n\n    {/* Page not found */}\n    <Route component={NotFound} />\n  </Switch>\n)\n\nexport default AppRouter\n","import React from 'react'\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport './App.css'\nimport NavBar from './components/NavBar/NavBar'\nimport Main from './routes'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <NavBar />\n      <Route component={Main} />\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","export const userConstants = {\n  REGISTER_REQUEST: 'USERS_REGISTER_REQUEST',\n  REGISTER_SUCCESS: 'USERS_REGISTER_SUCCESS',\n  REGISTER_FAILURE: 'USERS_REGISTER_FAILURE',\n\n  LOGIN_REQUEST: 'USERS_LOGIN_REQUEST',\n  LOGIN_SUCCESS: 'USERS_LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'USERS_LOGIN_FAILURE',\n\n  LOGOUT: 'USERS_LOGOUT',\n\n  GETALL_REQUEST: 'USERS_GETALL_REQUEST',\n  GETALL_SUCCESS: 'USERS_GETALL_SUCCESS',\n  GETALL_FAILURE: 'USERS_GETALL_FAILURE',\n\n  DELETE_REQUEST: 'USERS_DELETE_REQUEST',\n  DELETE_SUCCESS: 'USERS_DELETE_SUCCESS',\n  DELETE_FAILURE: 'USERS_DELETE_FAILURE',\n}\n","import * as constants from '../constants'\n\nconst initialState = {}\n\nexport function authentication(state = initialState, action: any) {\n  switch (action.type) {\n    case constants.userConstants.LOGIN_REQUEST:\n      return {\n        isLoggedIn: true,\n        user: action.user,\n      }\n    case constants.userConstants.LOGIN_SUCCESS:\n      return {\n        isLoggedIn: true,\n        user: action.user,\n      }\n    case constants.userConstants.LOGIN_FAILURE:\n      return {}\n    case constants.userConstants.LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\n\nimport { authentication } from './authentication.reducer'\nimport { registration } from './registration.reducer'\n\nconst rootReducer = combineReducers({\n  authentication,\n  registration,\n})\n\nexport default rootReducer\n","import { userConstants } from '../constants'\n\nexport function registration(state = {}, action: any) {\n  switch (action.type) {\n    case userConstants.REGISTER_REQUEST:\n      return { registering: true }\n    case userConstants.REGISTER_SUCCESS:\n      return {}\n    case userConstants.REGISTER_FAILURE:\n      return {}\n    default:\n      return state\n  }\n}\n","import { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './reducers'\nimport thunkMiddleware from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\n\nconst loggerMiddleware = createLogger()\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, loggerMiddleware))\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './assets/scss/app.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}